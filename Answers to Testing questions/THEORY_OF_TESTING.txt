1.	Что такое тестирование?
Ответ: Тестирование - это поиск несоответствия между ожидаемым и фактическим результатом
      (процесс анализа ПО и соответствующей документации с целью выявления дефектов и повышения качества продукта, по Куликову);

2.	Кто такой тестировщик?
Ответ: Тестировщик – лицо, производящее тестирование ПО на проекте;

3.	Модели разработки ПО?
Ответ: Waterfall, V-model, Iterative(incremental), spiral, agile;


4.	Что такое жизненный цикл ПО?
Ответ: Замкнутая последовательность действий
•	Общее планирование и анализ требований
•	Уточнение критериев приемки
•	Уточнение стратегии тестирования
•	Разработка тест-кейсов
•	Выполнение тест-кейсов
•	Фиксация найденных дефектов
•	Анализ результатов тестирования
•	Отчетность;

5.	Клиент-серверная архитектура
Ответ: Сетевая архитектура в которой сетевая нагрузка распределена между поставщиками услуг. 
       Двухуровневая – клиент + сервер
       Трехуровневая – клиент + сервер + БД
       Многоуровневая – клиент + сервер + БД + сервер и т.д.

6.	Что такое HTTP и HTTPS
Ответ: Протоколы передачи текстовой информации в формате HTML (HyperTextTransferProtocol, HyperTextTransferProtocolSecure)
       HTTPS – шифрованный протокол.
       Secure – защищенный протокол, сертификатом сервера, которому доверяют;

7.	HTTP методы
Ответ: GET – безопасный метод для получения каких-либо данных с сервера, не имеет тела (body), извлекаем информацию
       POST – небезопасный метод, получаем информацию с сервера, можем вносить изменения на сервере
       PUT - заменяет все текущие представления ресурса данными запроса
       DELETE – используется для удаления информации с сервера
       PATCH – используется для частичного изменения ресурса
       OPTIONS – используется для описания параметров соединения с ресурсом
       HEAD – запрашивает ресурс как GET но без тела ответа
       CONNECT – устанавливает «туннель» к серверу
       TRACE – выполняет вызов возвращаемого тестового сообщения с ресурса;

9.	HTTP статус коды сервера
Ответ: 100-е – Информационные (100 Continue, 101 Switching protocols, 102 Processing, 103 Early hints)
       200-е – сообщающие об успешном запросе (200 ok, 201 Created, 203 Accepted)
       300-е – перенаправляющие Redirection
       400-е – сообщающие об ошибке на стороне клиента (400 Bad request, 401 Unauthorized, 402 Payment required, 403 Forbidden, 404 Not found, 405 Method not allowed, 406 Not acceptable)
       500-е – сообщающие об ошибке на стороне сервера (500 Internal server error, 501 Not implemented, 502 Bad gateway, 503 Service unavailable, 504 Gateway time out, 507 Insufficient storage);

10.	Что такое ядро браузера
Ответ: Совокупность HTML-парсера и рендера
       HTML-парсер – компонент браузера обрабатывающий HTML;
       Рендер – модуль подготавливающий графическое представление HTML-документа;

11.	Какие браузеры какие ядра используют
Ответ: IE – Trident and ChakraJScript, Edge – EdgeHtml and Chakra JawaScript, Safari – Webkit and Nitro, Chrome – Blink and V8, Firefox – Gecko and SpiderMonkey;

12.	Что такое API
Ответ: Application Programming Interface – описание способов как одна программа может взаимодействовать с другой программой;

13.	Что такое ендпоинты
Ответ: точка приема запроса на стороне сервера;

14.	URL (URI, URL, URN)
Ответ: URL (UniformResourceLocator) – унифицированный адрес электронного ресурса
       URI – унифицированный стандарт идентификации ресурса
       URN – унифицированное название ресурса;

15.	Идемпотентные HTTP методы
Ответ: когда запрос отправленный повторно или несколько раз имеет один и тот-же результат;

16.	Безопасные HTTP методы
Ответ: GET, HEAD, PUT, DELETE, TRACE, OPTIONS;

17.	Идентификация, Аутентификация, Авторизация
Ответ: Идентификация – процесс установления личности по логину
       Аутентификация – процесс установления личности по паролю
       Авторизация – процесс при выполнении успешной идентификации и аутентификации;

18.	Что такое IP
Ответ: уникальный идентификатор устройства компьютерной сети работающего по протоколу IP;

19.	Что такое октаты в DNS, DNS
Ответ: DNS - компьютерная распределительная система, получающая информацию о доменах. Хранит информацию о соответствии домена IP адресу.
       Октет DNS - одна из четырех ячеек;

20.	Что такое порт, сколько портов у Linux сервера
Ответ: Это специальный процесс, который обслуживает сетевое соединение на заданном адресе. Портов в Linux 65536;

21.	Уровни OSI
Ответ: Физический
       Канальный
       Сетевой
       Транспортный
       Сеансовый
       Представительный
       Прикладной;
             
22.	Хедеры http запросов
Ответ: General Headers (общие заголовки) – используются в запросах и ответах
       Request Headers (заголовки запроса) – используются только в запросах
       Response Headers (заголовки ответа) – используются только в ответах
       Entity Headers (заголовки сущности) – сопровождают каждую сущность сообщения. Используются в запросах и ответах. 
23.	Уровни тестирования
Ответ: 
•	Компонентное/Модульное тестирование (Component/Unit testing)
•	Интеграционное тестирование (Integration testing)
•	Системное тестирование (System testing)
•	Приёмочное (Acceptance testing);

24.	Цели тестирования:
Ответ:
-	Проверка соответствия требованиям;
-	Обнаружение проблем на более ранних этапах разработки;
-	Предотвращение повышения стоимости продукта;
-	Обнаружение вариантов использования, которые не были предусмотрены при разработке;
-	Взгляд на продукт со стороны пользователя;
-	Повышение лояльности к компании и продукту, т.к. любой обнаруженный деффект негативно влияет на доверие пользователей; 

25.	Принципы тестирования:
Ответ:
•	Тестирование демонстрирует наличие деффектов (Testing shows presence of defects)
        Тестирование только снижает вероятность наличия деффектов, но не гарантирует их отсутствие;
•	Исчерпывающее тестирование невозможно (Exhaustive testing is impossible)
        Полное тестирование с использованием всех входных комбинаций данных, результатов и предусловий физически невыполнимо (исключение – тривиальные случаи);
•	Ранее тестирование ПО (Early testing)
        Следует начинать тестирование на ранних стадиях жизненного цикла разработки ПО, чтобы найти деффекты как можно раньше;
•	Скопление деффектов (Deffect clustering)
        Большая часть деффектов находится в ограниченном количестве модулей;
•	Парадокс пестицида (Pesticide paradox) 
        Если повторять одни и те же тестовые сценарии снова и снова, в какой-то моменты этот набор тестов перестанет выявлять новые дуффекты;
•	Тестирование зависит от контекста (Testing is context depending)
        Тестирование проводится по-разному в зависимости от контекста. Например, программное обеспечение в котором критически важна безопасность, тестируется иначе, чем новостной портал;
•	Заблуждение об отсутствии ошибок (Absence of errors fallacy)
        Отсутствие найденных деффектов при тестировании не всегда означает готовность продукта к релизу. Система должна быть удобна пользователю в использовании и удовлетворять его ожиданиям и потребностям;

26. Обеспечение качества (QA - Quality Assurance) - обеспечение качества и QC (Quality Control) - эти термины похожи на взаимозаменяемые, но разница между обеспечением качества и контролем качества все таки есть, хоть на практике и имеют схожесть.
    QC (Quality Control) — Контроль качества продукта — анализ результатов тестирования и качества новых версий выпускаемого продукта.
    К задачам контроля качества относятся:

    - проверка готовности ПО к релизу;
    - проверка соответствия требований и качества данного проекта.

    QA (Quality Assurance) — Обеспечение качества продукта — изучение возможностей по изменению и улучшению процесса разработки, улучшению коммуникаций в команде, где тестирование является только одним из аспектов обеспечения качества.
    К задачам обеспечения качества относятся:

    - проверка технических характеристик и требований к ПО;
    - оценка рисков;
    - планирование задач для улучшения качества продукции;
    - подготовка документации, тестового окружения и данных;
    - тестирование;
    - анализ результатов тестирования, а также составление отчетов и других документов. 

27. Верификация и валидация - два понятия тесно связаны с процессами тестирования и обеспечения качества. 
    * Верификация(Verification) - процесс оценки системы, чтобы понять, удовлетворяют ли результаты текущего этапа разработки, условиям которые были сформулированы в его начале.
    * Валидация(Validation) - это определение соответствия разрабатываемого ПО ожиданиям и потребностям пользователя, его требованиям к системе.

28. Документацию, которая используется на проектах по разработке ПО, можно условно разделить на две группы:

    - Проектная документация — включает в себя всё, что относится к проекту в целом.
    - Продуктовая документация — часть проектной документации, выделяемая отдельно, которая относится непосредственно к разрабатываемому приложению или системе.

29. Этапы тестирования:
	1. Анализ продукта;
	2. Работа с требованиями;
	3. Разработка стратегии тестирования и планирование процедур контроля качества;
	4. Создание тестовой документации;
	5. Тестирование прототипа;
	6. Основное тестирование;
	7. Стабилизация;
	8. Эксплуатация.

	






